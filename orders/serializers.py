from rest_framework import serializers
from .models import Order, OrderProduct
from products.models import Product
from products.serializers import ProductSerializer

class OrderProductSerializer(serializers.ModelSerializer):
    bread = ProductSerializer()
    class Meta:
        model = OrderProduct
        fields = ['bread', 'quantity']  # Only the necessary fields

class OrderSerializer(serializers.ModelSerializer):
    order_products = OrderProductSerializer(many=True)  # Nested serializer

    class Meta:
        model = Order
        fields = ['id', 'user', 'status', 'total_price', 'created_at', 'message', 'order_products']
        read_only_fields = ['id', 'created_at']  # Fields auto-generated by the system

    def create(self, validated_data):
        # Extract nested data for order products
        order_products_data = validated_data.pop('order_products', [])
        order = Order.objects.create(**validated_data)  # Create the Order instance

        # Create associated OrderProduct instances
        for product_data in order_products_data:
            OrderProduct.objects.create(order=order, **product_data)

        return order
